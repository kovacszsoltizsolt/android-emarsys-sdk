name: Emarsys SDK - Modularized CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Build job

    steps:
      - uses: actions/checkout@v2.3.1
        with:
          submodules: true
          fetch-depth: 0 # 0 indicates all history
      - run: git fetch --all || echo "==> Accept any result"
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: create-google services json
        uses: jsdaniell/create-json@1.1.2
        with:
          # The name of the file to be written. | file.json
          name: google-services.json
          # The json string that can be a secret of the github repo or a string of a json. | "{"title": "my json"}"
          json: ${{ secrets.GOOGLE_SERVICES_JSON }}
          # Optional subfolder directory to save the json file. | src/
          dir: sample

      - name: set environment variables
        uses: allenevans/set-env@v1.0.0
        with:
          RELEASE_KEY_PASSWORD:  ${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}
          RELEASE_KEY_ALIAS:  ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          RELEASE_STORE_PASSWORD:  ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          RELEASE_STORE_FILE: ${{ secrets.RELEASE_STORE_FILE }}
          DEVELOPMENT_MODE: ${{ secrets.DEVELOPMENT_MODE }}
          GOOGLE_SERVICES_API_KEY: ${{ secrets.GOOGLE_SERVICES_API_KEY }}

      - name: Build + Lint with Gradle
        run: ./gradlew assembleAndroidTest

      - name: create testlab services json
        uses: jsdaniell/create-json@1.1.2
        with:
          # The name of the file to be written. | file.json
          name: sacc_key.json
          # The json string that can be a secret of the github repo or a string of a json. | "{"title": "my json"}"
          json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

  Test:
    runs-on: ubuntu-latest
    name: Test job
    needs: [Build]
    steps:
      - name: Run firebase tests
        run: bash ./run_all_tests_on_firebase.sh
